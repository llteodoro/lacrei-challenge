name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: lacrei-node-api
  CONTAINER_NAME: lacrei-node-api
  DOCKER_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: OWASP ZAP Scan
      uses: zaproxy/action-full-scan@v0.6.0
      with:
        target: 'http://localhost:3000'
        docker_name: 'owasp/zap2docker-stable'
        cmd_options: '-a -j'
        
    - name: Start API for scanning
      run: |
        docker build -t ${{ env.CONTAINER_NAME }} .
        docker run -d -p 3000:3000 --name ${{ env.CONTAINER_NAME }}-scan ${{ env.CONTAINER_NAME }}
        sleep 10 # Wait for app to start
        
    - name: Stop and remove container
      if: always()
      run: |
        docker stop ${{ env.CONTAINER_NAME }}-scan || true
        docker rm ${{ env.CONTAINER_NAME }}-scan || true
        
    - name: Upload ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: zap-scan-report
        path: zap-report.html

  build-and-push-ecr:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }} .
        docker push ${{ env.DOCKER_IMAGE }}

  deploy-ecs:
    needs: build-and-push-ecr
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.AWS_ECS_CLUSTER }} \
          --service ${{ secrets.AWS_ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}